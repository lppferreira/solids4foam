/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | foam-extend: Open Source CFD                    |
|  \\    /   O peration     | Version:     3.0                                |
|   \\  /    A nd           | Web:         http://www.extend-project.de       |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0";
    object      D;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 0 0 0 0 0];

internalField   uniform (0 0 0);

boundaryField
{
    topBrickUp
    {
        type            fixedDisplacement;
        value           uniform (0 -0.0006 0);
    }

    bottomBrickDown
    {
        type            fixedDisplacement;
        value           uniform (0 0 0);
    }
    bottomBrickUp
    {
        type            solidContact;
        master          yes;

        // Write point distance field in contact region
        writePointDistanceFields yes;

        rigidMaster     no;
        shadowPatch     topBrickDown;
        normalContactModel standardPenalty;
        standardPenaltyNormalModelDict
        {
            relaxationFactor 0.01;
            penaltyScale     1.0;
        }
        frictionContactModel frictionless;

//         frictionContactModel standardPenalty;
//         standardPenaltyFrictionModelDict
//         {
//             relaxationFactor  0.01;
//             penaltyScale      1;
//             frictionLaw       coulomb;
//             frictionLawDict
//             {
//                 frictionCoeff 0.1;
//             }
//         }
        value           uniform (0 0 0);
    }

    topBrickDown
    {
//         type            solidTraction;
//         traction        uniform ( -1e6 0 0 );
//         pressure        uniform 1e6;
//         value           uniform (0 0 0);
        type            solidContact;
        shadowPatch     bottomBrickUp;
        master          no;
        value           uniform (0 0 0);
    }

    bottomBrickLeft
    {
        type            solidTraction;
        traction        uniform ( 0 0 0 );
        pressure        uniform 0;
        value           uniform (0 0 0);
    }

    bottomBrickRight
    {
        type            solidTraction;
        traction        uniform ( 0 0 0 );
        pressure        uniform 0;
        value           uniform (0 0 0);
    }
    topBrickLeft
    {
        type            solidTraction;
        traction        uniform ( 0 0 0 );
        pressure        uniform 0;
        value           uniform (0 0 0);
    }
    topBrickRight
    {
        type            solidTraction;
        traction        uniform ( 0 0 0 );
        pressure        uniform 0;
        value           uniform (0 0 0);
    }
    frontAndBack
    {
        type            empty;
    }
}

// ************************************************************************* //
