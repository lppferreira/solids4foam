#!/bin/bash
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | foam-extend: Open Source CFD
#  \\    /   O peration     | Version:     3.2
#   \\  /    A nd           | Web:         http://www.foam-extend.org
#    \\/     M anipulation  | For copyright notice see file Copyright
#------------------------------------------------------------------------------
# License
#     This file is part of foam-extend.
#
#     foam-extend is free software: you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by the
#     Free Software Foundation, either version 3 of the License, or (at your
#     option) any later version.
#
#     foam-extend is distributed in the hope that it will be useful, but
#     WITHOUT ANY WARRANTY; without even the implied warranty of
#     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
#     General Public License for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with foam-extend.  If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     Allrun
#
# Description
#
#------------------------------------------------------------------------------

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions

# logReport <logfile>
# Extracts useful info from log file.
logReport () {
    case=`dirname $1 | sed s/"\(.*\)\.\/"/""/g`
    app=`echo $1 | sed s/"\(.*\)\."/""/g`
    appAndCase="Application $app - case $case"

    fatalError=`grep "FOAM FATAL" $1`
    UxSS=`grep -E "Ux[:| ]*solution singularity" $1`
    UySS=`grep -E "Uy[:| ]*solution singularity" $1`
    UzSS=`grep -E "Uz[:| ]*solution singularity" $1`
    completed=`grep -E "^[\t ]*[eE]nd" $1`

    if [ "$fatalError" ] ; then
        echo "$appAndCase: ** FOAM FATAL ERROR **"
        return
    elif [ "$UxSS" -a "$UySS" -a "$UzSS" ] ; then
        echo "$appAndCase: ** Solution singularity **"
        return
    elif [ "$completed" ] ; then
        completionTime=`tail -10 $log | grep Execution | cut -d= -f2 | sed 's/^[ \t]*//'`
        if [ "$completionTime" ] ; then
            completionTime="in $completionTime"
        fi
        echo "$appAndCase: completed $completionTime"
        return
    else
        echo "$appAndCase: unconfirmed completion"
    fi
}


# Recursively run all tutorials
foamRunTutorials cases


# Analyse all log files
rm testLoopReport > /dev/null 2>&1 &
touch testLoopReport
for application in *
do
    if [ -d $application ]
    then
        cd $application
        for log in `find . -name "log.*" | xargs ls -rt`
        do
            logReport $log >> ../testLoopReport
        done
        echo "" >> ../testLoopReport
        cd ..
    fi
done

find . -name "log.*" -exec cat {} \; >> logs


# ----------------------------------------------------------------- end-of-file
