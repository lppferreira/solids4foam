/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM Extend Project: Open Source CFD        |
|  \\    /   O peration     | Version:  1.6-ext                               |
|   \\  /    A nd           | Web:      www.extend-project.de                 |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    location    "constant/polyMesh";
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 0.001;

vertices
(
    (-100 0 0)
    (-50 0 0)
    (-5 0 0)
    (-3.535533906 3.535533906 0)
    (3.535533906 3.535533906 0)
    (3.535533906 -3.535533906 0)
    (0 -5 0)
    (0 -50 0)
    (0 -100 0)
    (50 -100 0)
    (50 -50 0)
    (50 50 0)
    (-50 50 0)
    (-100 50 0)

    (-100 0 15)
    (-50 0 15)
    (-5 0 15)
    (-3.535533906 3.535533906 15)
    (3.535533906 3.535533906 15)
    (3.535533906 -3.535533906 15)
    (0 -5 15)
    (0 -50 15)
    (0 -100 15)
    (50 -100 15)
    (50 -50 15)
    (50 50 15)
    (-50 50 15)
    (-100 50 15) // 27

    // (-6 0 0)
    // (-4.2426406872 4.2426406872 0)
    // (4.2426406872 4.2426406872 0)
    // (4.2426406872 -4.2426406872 0)
    // (0 -6 0)

    // (-6 0 15)
    // (-4.2426406872 4.2426406872 15)
    // (4.2426406872 4.2426406872 15)
    // (4.2426406872 -4.2426406872 15)
    // (0 -6 15)

    (-8 0 0)
    (-5.6568542496 5.6568542496 0)
    (5.6568542496 5.6568542496 0)
    (5.6568542496 -5.6568542496 0)
    (0 -8 0)

    (-8 0 15)
    (-5.6568542496 5.6568542496 15)
    (5.6568542496 5.6568542496 15)
    (5.6568542496 -5.6568542496 15)
    (0 -8 15)
);

blocks
(
    // Demirdzic 1997 used this mesh ratio for meshes:
    // 2x4x3 for first and last blocks
    // 8x4x3 for second and second last
    // 8x8x3 for middle two

    // mesh 1
//     hex (0 1 12 13 14 15 26 27) (4 8 6) simpleGrading (0.625 1 1)
//     hex (1 28 29 12 15 33 34 26) (12 8 6) simpleGrading (0.1 1 1)
//     hex (30 11 12 29 35 25 26 34) (12 16 6) simpleGrading (10 1 1)
//     hex (31 10 11 30 36 24 25 35) (12 16 6) simpleGrading (10 1 1)
//     hex (32 7 10 31 37 21 24 36) (12 8 6) simpleGrading (10 1 1)
//     hex (7 8 9 10 21 22 23 24) (4 8 6) simpleGrading (1.6 1 1)
//     hex (28 2 3 29 33 16 17 34) (4 8 6) simpleGrading (1 1 1)
//     hex (4 30 29 3 18 35 34 17) (4 16 6) simpleGrading (1 1 1)
//     hex (5 31 30 4 19 36 35 18) (4 16 6) simpleGrading (1 1 1)
//     hex (6 32 31 5 20 37 36 19) (4 8 6) simpleGrading (1 1 1)

    // mesh 2
//     hex (0 1 12 13 14 15 26 27) (4 8 6) simpleGrading (0.625 1 1)
//     hex (1 28 29 12 15 33 34 26) (12 8 6) simpleGrading (0.1 1 1)
//     hex (30 11 12 29 35 25 26 34) (12 16 6) simpleGrading (10 1 1)
//     hex (31 10 11 30 36 24 25 35) (12 16 6) simpleGrading (10 1 1)
//     hex (32 7 10 31 37 21 24 36) (12 8 6) simpleGrading (10 1 1)
//     hex (7 8 9 10 21 22 23 24) (4 8 6) simpleGrading (1.6 1 1)
//     hex (28 2 3 29 33 16 17 34) (4 8 6) simpleGrading (1 1 1)
//     hex (4 30 29 3 18 35 34 17) (4 16 6) simpleGrading (1 1 1)
//     hex (5 31 30 4 19 36 35 18) (4 16 6) simpleGrading (1 1 1)
//     hex (6 32 31 5 20 37 36 19) (4 8 6) simpleGrading (1 1 1)

    // mesh 3
    hex (0 1 12 13 14 15 26 27) (8 16 12) simpleGrading (0.625 1 1)
    hex (1 28 29 12 15 33 34 26) (24 16 12) simpleGrading (0.1 1 1)
    hex (30 11 12 29 35 25 26 34) (24 32 12) simpleGrading (10 1 1)
    hex (31 10 11 30 36 24 25 35) (24 32 12) simpleGrading (10 1 1)
    hex (32 7 10 31 37 21 24 36) (24 16 12) simpleGrading (10 1 1)
    hex (7 8 9 10 21 22 23 24) (8 16 12) simpleGrading (1.6 1 1)
    hex (28 2 3 29 33 16 17 34) (8 16 12) simpleGrading (1 1 1)
    hex (4 30 29 3 18 35 34 17) (8 32 12) simpleGrading (1 1 1)
    hex (5 31 30 4 19 36 35 18) (8 32 12) simpleGrading (1 1 1)
    hex (6 32 31 5 20 37 36 19) (8 16 12) simpleGrading (1 1 1)

    // mesh 4
//     hex (0 1 12 13 14 15 26 27) (16 32 24) simpleGrading (0.625 1 1)
//     hex (1 28 29 12 15 33 34 26) (48 32 24) simpleGrading (0.1 1 1)
//     hex (30 11 12 29 35 25 26 34) (48 64 24) simpleGrading (10 1 1)
//     hex (31 10 11 30 36 24 25 35) (48 64 24) simpleGrading (10 1 1)
//     hex (32 7 10 31 37 21 24 36) (48 32 24) simpleGrading (10 1 1)
//     hex (7 8 9 10 21 22 23 24) (16 32 24) simpleGrading (1.6 1 1)
//     hex (28 2 3 29 33 16 17 34) (16 32 24) simpleGrading (1 1 1)
//     hex (4 30 29 3 18 35 34 17) (16 64 24) simpleGrading (1 1 1)
//     hex (5 31 30 4 19 36 35 18) (16 64 24) simpleGrading (1 1 1)
//     hex (6 32 31 5 20 37 36 19) (16 32 24) simpleGrading (1 1 1)
);

edges
(
    arc 2 3 (-4.6193976625 1.913417162 0)
    arc 16 17 (-4.6193976625 1.913417162 15)

    arc 3 4 (0 5 0)
    arc 17 18 (0 5 15)

    arc 4 5 (5 0 0)
    arc 18 19 (5 0 15)

    arc 5 6 (1.913417162 -4.6193976625 0)
    arc 19 20 (1.913417162 -4.6193976625 15)


    // arc 28 29 (-5.543277195 2.2961005944 0)
    // arc 33 34 (-5.543277195 2.2961005944 15)

    // arc 29 30 (0 6 0)
    // arc 34 35 (0 6 15)

    // arc 30 31 (6 0 0)
    // arc 35 36 (6 0 15)

    // arc 31 32 (2.2961005944 -5.543277195 0)
    // arc 36 37 (2.2961005944 -5.543277195 15)

    arc 28 29 (-7.39103626 3.0614674592 0)
    arc 33 34 (-7.39103626 3.0614674592 15)

    arc 29 30 (0 8 0)
    arc 34 35 (0 8 15)

    arc 30 31 (8 0 0)
    arc 35 36 (8 0 15)

    arc 31 32 (3.0614674592 -7.39103626 0)
    arc 36 37 (3.0614674592 -7.39103626 15)
);

patches
(
    patch symmz
    (
        (13 12 1 0)
        (12 29 28 1)
        (12 11 30 29)
        (11 10 31 30)
        (10 7 32 31)
        (10 9 8 7)

        (29 3 2 28)
        (29 30 4 3)
        (30 31 5 4)
        (31 32 6 5)
    )

    patch front
    (
        (14 15 26 27)
        (15 33 34 26)
        (34 35 25 26)
        (35 36 24 25)
        (36 37 21 24)
        (21 22 23 24)

        (33 16 17 34)
        (17 18 35 34)
        (18 19 36 35)
        (19 20 37 36)
    )

    patch symmx
    (
        (10 11 25 24)
        (9 10 24 23)
    )

    patch loading
    (
        (8 9 23 22)
    )

    patch fixed
    (
        (13 0 14 27)
    )

    patch tractionFree
    (
        (11 12 26 25)
        (12 13 27 26)
        (0 1 15 14)
        (1 28 33 15)
        (28 2 16 33)
        (2 3 17 16)
        (3 4 18 17)
        (4 5 19 18)
        (5 6 20 19)
        (6 32 37 20)
        (32 7 21 37)
        (7 8 22 21)
    )
);

mergePatchPairs
(
);

// ************************************************************************* //
